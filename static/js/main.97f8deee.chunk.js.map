{"version":3,"sources":["mock-data.js","api.js","components/CitySearch.js","components/Event.js","components/EventList.js","components/NumberOfEvents.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["mockData","kind","etag","id","status","htmlLink","created","updated","summary","description","location","creator","email","self","organizer","start","dateTime","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","events","map","event","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getAccessToken","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","window","search","get","axios","results","authUrl","data","href","getEvents","NProgress","startsWith","done","token","removeQuery","url","locations","JSON","stringify","history","pushState","pathname","newurl","protocol","host","CitySearch","state","query","suggestions","showSuggestions","handleInputChanged","value","target","props","filter","toUpperCase","indexOf","setState","handleItemClicked","suggestion","updateEvents","className","type","this","onChange","onFocus","placeholder","style","display","onClick","Component","Event","showDetails","handleClick","e","EventList","NumberOfEvents","activeLocation","App","numberOfEvents","eventCount","locationEvents","slice","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.97f8deee.chunk.js","sourcesContent":["const mockData = [\n    {\n        kind: \"calendar#event\",\n        etag: '\"3181161784712000\"',\n        id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        status: \"confirmed\",\n        htmlLink:\n            \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        created: \"2020-05-19T19:17:46.000Z\",\n        updated: \"2020-05-27T12:01:32.356Z\",\n        summary: \"Learn JavaScript\",\n        description:\n            \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        location: \"London, UK\",\n        creator: {\n            email: \"fullstackwebdev@careerfoundry.com\",\n            self: true,\n        },\n        organizer: {\n            email: \"fullstackwebdev@careerfoundry.com\",\n            self: true,\n        },\n        start: {\n            dateTime: \"2020-05-19T16:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n        },\n        end: {\n            dateTime: \"2020-05-19T17:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n        },\n        recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n        originalStartTime: {\n            dateTime: \"2020-05-19T16:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n        },\n        iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        sequence: 0,\n        reminders: {\n            useDefault: true,\n        },\n        eventType: \"default\",\n    },\n    {\n        kind: \"calendar#event\",\n        etag: '\"3181159875584000\"',\n        id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        status: \"confirmed\",\n        htmlLink:\n            \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        created: \"2020-05-19T19:14:30.000Z\",\n        updated: \"2020-05-27T11:45:37.792Z\",\n        summary: \"React is Fun\",\n        description:\n            \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        location: \"Berlin, Germany\",\n        creator: {\n            email: \"fullstackwebdev@careerfoundry.com\",\n            self: true,\n        },\n        organizer: {\n            email: \"fullstackwebdev@careerfoundry.com\",\n            self: true,\n        },\n        start: {\n            dateTime: \"2020-05-20T14:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n        },\n        end: {\n            dateTime: \"2020-05-20T15:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n        },\n        recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        originalStartTime: {\n            dateTime: \"2020-05-20T14:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n        },\n        iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        sequence: 0,\n        reminders: {\n            useDefault: true,\n        },\n        eventType: \"default\",\n    },\n    {\n        kind: \"calendar#event\",\n        etag: '\"3181161784712000\"',\n        id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z2\",\n        status: \"confirmed\",\n        htmlLink:\n            \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        created: \"2020-05-19T19:17:46.000Z\",\n        updated: \"2020-05-27T12:01:32.356Z\",\n        summary: \"Learn JavaScript\",\n        description:\n            \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        location: \"London, UK\",\n        creator: {\n            email: \"fullstackwebdev@careerfoundry.com\",\n            self: true,\n        },\n        organizer: {\n            email: \"fullstackwebdev@careerfoundry.com\",\n            self: true,\n        },\n        start: {\n            dateTime: \"2020-05-19T16:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n        },\n        end: {\n            dateTime: \"2020-05-19T17:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n        },\n        recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n        originalStartTime: {\n            dateTime: \"2020-05-19T16:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n        },\n        iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        sequence: 0,\n        reminders: {\n            useDefault: true,\n        },\n        eventType: \"default\",\n    },\n    {\n        kind: \"calendar#event\",\n        etag: '\"3181159875584000\"',\n        id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z1\",\n        status: \"confirmed\",\n        htmlLink:\n            \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        created: \"2020-05-19T19:14:30.000Z\",\n        updated: \"2020-05-27T11:45:37.792Z\",\n        summary: \"React is Fun\",\n        description:\n            \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        location: \"Berlin, Germany\",\n        creator: {\n            email: \"fullstackwebdev@careerfoundry.com\",\n            self: true,\n        },\n        organizer: {\n            email: \"fullstackwebdev@careerfoundry.com\",\n            self: true,\n        },\n        start: {\n            dateTime: \"2020-05-20T14:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n        },\n        end: {\n            dateTime: \"2020-05-20T15:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n        },\n        recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        originalStartTime: {\n            dateTime: \"2020-05-20T14:00:00+02:00\",\n            timeZone: \"Europe/Berlin\",\n        },\n        iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        sequence: 0,\n        reminders: {\n            useDefault: true,\n        },\n        eventType: \"default\",\n    }\n];\n\nexport { mockData };","import axios from 'axios';\nimport { mockData } from './mock-data';\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n    let extractLocations = events.map((event) => event.location);\n    let locations = [...new Set(extractLocations)];\n    return locations;\n};\n\nconst checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    return result;\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        `https://znwct5krqf.execute-api.ca-central-1.amazonaws.com/dev/api/get-access-token/${encodeCode}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    access_token && localStorage.setItem(\"access_token\", access_token);\n\n    return access_token;\n};\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\n                \"https://znwct5krqf.execute-api.ca-central-1.amazonaws.com/dev/api/get-auth-url\"\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n}\n\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith(\"http://localhost\")) {\n        NProgress.done();\n        return mockData;\n    }\n\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        const url = `https://znwct5krqf.execute-api.ca-central-1.amazonaws.com/dev/api/get-events/${token}`;\n        const result = await axios.get(url);\n        if (result.data) {\n            let locations = extractLocations(result.data.events);\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocol +\n            \"//\" +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};\n\n","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: false\n    }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        this.setState({\n            query: value,\n            suggestions\n        });\n    }\n\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion,\n            showSuggestions: false\n        });\n        this.props.updateEvents(suggestion)\n    }\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                <label className='label'>City:</label>\n                <input\n                    type=\"text\"\n                    className=\"city\"\n                    value={this.state.query}\n                    onChange={this.handleInputChanged}\n                    onFocus={() => this.setState({ showSuggestions: true })}\n                    placeholder='type in a city'\n                />\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: \"none\" }}>\n                    {this.state.suggestions.map((suggestion) => (\n                        <li\n                            key={suggestion}\n                            onClick={() => this.handleItemClicked(suggestion)}\n                        >\n                            {suggestion}\n                        </li>\n                    ))}\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\n                        <b>See all cities</b>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default CitySearch\n\n","import React, { Component } from 'react'\n\nclass Event extends Component {\n    state = {\n        showDetails: false\n    }\n\n    handleClick = (e) => {\n        this.setState({ showDetails: !this.state.showDetails });\n    }\n\n    render() {\n        const { event } = this.props\n        const { showDetails } = this.state;\n\n        return (\n            <div className=\"event\">\n                <h1 className=\"summary\">{event.summary}</h1>\n                <p className=\"organizer\">{event.organizer.email}</p>\n                <p className=\"time\">{event.start.dateTime} - {event.end.dateTime}</p>\n                <p className=\"location\">{event.location}</p>\n                {\n                    showDetails && <p className=\"description\">{event.description}</p>\n                }\n                <button className=\"details\" onClick={this.handleClick}>{showDetails ? 'Hide Details' : 'Show Details'}</button>\n            </div>\n        )\n    }\n}\n\nexport default Event;","import React, { Component } from 'react'\n\nimport Event from './Event'\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props\n        return (\n            <ul className=\"event-list\" >\n                {events.map(event =>\n                    <li key={event.id}>\n                        <Event event={event} />\n                    </li>\n                )}\n            </ul>\n        )\n    }\n}\n\nexport default EventList","import React, { Component } from \"react\";\n\nclass NumberOfEvents extends Component {\n    state = {\n        error: ''\n    }\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        this.props.updateEvents(this.props.activeLocation, value)\n\n        if (value > 32 || value < 1) {\n            this.setState({\n                error: 'Select number from 1 to 32 only'\n            });\n        }\n\n    };\n\n    render() {\n        return <div className=\"numberOfEvents\">\n            <label className='label'>Number of Events:</label>\n            <input\n                type=\"number\"\n                className=\"events-number\"\n                onChange={this.handleInputChanged}\n            />\n            {this.state.error !== '' && <p>{this.state.error}</p>}\n        </div>;\n    }\n}\nexport default NumberOfEvents;","import React, { Component } from 'react'\n\nimport './App.css';\nimport './nprogress.css';\nimport { getEvents, extractLocations } from './api'\n\n// embedded components\nimport CitySearch from './components/CitySearch';\nimport EventList from './components/EventList';\nimport NumberOfEvents from './components/NumberOfEvents';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    activeLocation: 'all'\n  }\n\n  updateEvents = (location, eventCount = this.state.eventCount) => {\n    getEvents().then((events) => {\n      let locationEvents = (location === \"all\" ? events : events.filter((event) => event.location === location));\n      locationEvents = locationEvents.slice(0, eventCount)\n      this.setState({\n        events: locationEvents,\n        numberOfEvents: eventCount,\n        activeLocation: location\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      this.mounted && this.setState({ events, locations: extractLocations(events) });\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents activeLocation={this.state.activeLocation} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}